name: Build and push docker image
description: "Build and push docker image"
permissions:
    id-token: write
    pull-requests: write
    contents: read
inputs:
  ENV: 
    description: 'ENV'
    required: true
  AWS_ROLE:
    description: 'AWS ROLE'
    required: true
  AWS_REGION:
    description: 'AWS REGION'
    required: true
  PROJECT_PREFIX:
    description: 'PROJECT PREFIX'
    required: true
  ECR_REPOSITORY:
    description: 'ECR REPOSITORY'
    required: true
  COMMON_TOKEN:
    description: 'COMMON TOKEN'
    required: true
outputs:
    ECR_REPO: 
      description: 'ECR Repo'
      value: ${{ steps.image.outputs.ECR_REPO }}
    ECR_REGISTRY: 
      description: 'ECR Registry'
      value: ${{ steps.image.outputs.ECR_REGISTRY }}
    IMAGE_TAG:
      description: 'IMAGE TAG'
      value: ${{ steps.image.outputs.IMAGE_TAG }}
runs:
  using: "composite"
  steps:
    - name: "Checkout repository on : ${{ github.REF }}"
      uses: actions/checkout@v4

    - name: "Set up QEMU"
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: ${{ inputs.AWS_ROLE }}
        aws-region: ${{ inputs.AWS_REGION }}
        mask-aws-account-id: "no"

    - name: Amazon ECR Login
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push to Amazon ECR
      id: build
      uses: docker/build-push-action@v5
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ inputs.COMMONS_TOKEN }}
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        build-args: |
          BUILD_ENV=${{ env.ENV }}
          GITHUB_ACTOR=${{ env.GITHUB_ACTOR }}
          GITHUB_TOKEN=${{ env.GITHUB_TOKEN }}

    - name: Build Image Name
      shell: bash
      id: image
      run: |
        ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
        echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}"  >> $GITHUB_OUTPUT
        echo "ECR_REPO=$ECR_REGISTRY/$ECR_REPOSITORY"  >> $GITHUB_OUTPUT
        echo "IMAGE_TAG=${{ github.sha }}"  >> $GITHUB_OUTPUT